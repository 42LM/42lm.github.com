---
import Layout from '../layouts/Layout.astro';
import Welcome from '@/components/Welcome.astro';
import Navbar from '@/components/Navbar.astro';
---

<Layout>
  <Navbar></Navbar>

  <main>
    <row is-="column">
      <div id="command-history">
        <Welcome></Welcome>
      </div>

      <row class="custom-dropdown-container">
        <row align-="between" style="align-items: center">
          <div>
            <span>
              <span id="prompt-guest">guest</span><span id="prompt-at">@</span><span id="prompt-domain">42LM.com</span><span id="prompt-signs">:$ ~</span>
            </span>
            <input id="cmdline" placeholder="Start typing or click here" autocomplete="off">
          </div>
        </row>
        <div class="suggestions-list" id="suggestions-list"></div>
      </row>
    </row>
  </main>

</Layout>

<style is:global>
  #cmdline {
    min-width: 0;
    width: 315px;
    background: none;
    padding: 0;
  }

  #prompt-guest {
    color: var(--red)
  }
  #prompt-domain {
    color: var(--peach);
  }

  @media (max-width: 700px) {
    .suggestions-list {
      font-size: 25px;
    }
    #cmdline {
      width: 150px;
    }
  }
  @media (max-width: 370px) {
    #cmdline {
      width: 100px;
    }
  }
  /* disable the autofocus border/box shadow */
  input:-webkit-autofill,
  input:-webkit-autofill:hover,
  input:-webkit-autofill:focus,
  textarea:-webkit-autofill,
  textarea:-webkit-autofill:hover,
  textarea:-webkit-autofill:focus,
  select:-webkit-autofill,
  select:-webkit-autofill:hover,
  select:-webkit-autofill:focus {
    /* To make the background color transparent */
    -webkit-box-shadow: 0 0 0px 1000px transparent inset !important;
  }
  #content {
    display: block;
  }

  /* Custom input dropdown */
  .custom-dropdown-container {
    display: inline;
    position: relative;
    padding: 10px;
  }
  .suggestions-list {
    display: none; /* Hidden by default */
    position: absolute;
    max-height: 350px;
    width: 22ch;
    overflow-y: auto;
    background-color: var(--background1);
    z-index: 1000;
  }

  /* Will be added with JavaScript to show the list */
  .suggestions-list.show {
    display: block;
  }
  .suggestion-item {
    border-bottom: 1px solid var(--crust);
    padding-left: 10px;
    cursor: pointer;
  }
  .suggestion-item:hover,
  .suggestion-item.selected-item { /* Added selected-item class */
    color: var(--crust);
    background-color: var(--blue);
  }
  .suggestion-item:active {
    color: var(--crust);
    background-color: var(--blue);
  }

  /* Select ASCII boxes */
  .selected {
    /* border: 1px solid var(--sky); */
    outline: 1px solid var(--sky);
    background: linear-gradient(
      90deg,
      rgba(114, 134, 253, 0.05) 0%,    /* #7286FD at 60% opacity */
      rgba(30, 102, 244, 0.05) 50%,    /* #1E66F4 at 60% opacity */
      rgba(4, 165, 228, 0.1) 100%    /* #04A5E4 at 60% opacity */
    );
  }
</style>

<script>
  import { selectLatestBox } from "@/utils/select";
  import { updatePrompt, updateInputPlaceholder } from "@/utils/update";
  import '../utils/suggestion.ts';

  const mobileMediaQuery = window.matchMedia('(max-width: 775px)');
  const desktopMediaQuery = window.matchMedia('(min-width: 776px)');

  localStorage.setItem('cd', '');

  updateInputPlaceholder();
  updatePrompt();
  // Listen for changes in the media query state
  // Update placeholder for the cmdline input field
  mobileMediaQuery.addEventListener('change', updateInputPlaceholder);
  desktopMediaQuery.addEventListener('change', updateInputPlaceholder);
  // Update prompt text
  mobileMediaQuery.addEventListener('change', updatePrompt);
  desktopMediaQuery.addEventListener('change', updatePrompt);

  // Call directly to check/select the welcome ascii box
  selectLatestBox();
</script>
